trigger:
  - master

variables:
  subscription: 'Azure Subscription'
  location: 'australiaeast'
  resourceGroupNamePrefix: 'wb-search'
  serviceName: common-data
  storageAccountType: Standard_LRS
  dataLakeNamePrefix: wbdatalake

stages:
  - stage: DeployToDev
    displayName: Search - Development
    variables:
      environment: dev
    jobs:
      - job: Deploy_Search
        pool:
          vmImage: 'ubuntu-18.04'
        steps:
          - task: AzureCLI@1
            displayName: Create the resource group
            inputs:
              azureSubscription: $(subscription)
              scriptLocation: 'inlineScript'
              inlineScript: 'az group create --name $(resourceGroupNamePrefix)-$(environment) --location $(location) --tags environment=$(environment) service=$(serviceName)'

          - task: AzureResourceGroupDeployment@2
            name: deployBaseTemplate
            displayName: Deploy search service template
            inputs:
              azureSubscription: $(subscription)
              resourceGroupName: $(resourceGroupNamePrefix)-$(environment)
              location: $(location)
              deploymentMode: incremental
              deploymentName: WB_Search_$(environment)
              csmFile: azuredeploy.json
              overrideParameters: >
                -tagEnvironment $(environment)
                -tagService $(serviceName)

          - task: PowerShell@2
            name: parseOutputs
            displayName: Parse the deployment outputs
            inputs:
              targetType: inline
              script: |
                Write-Host '$(baseDeploymentOutput)'
                $outputs = ConvertFrom-Json '$(deployBaseTemplate)'
                $searchServiceName = $outputs.searchServiceName.value
                Write-Host "##vso[task.setvariable variable=searchServiceName;]$searchServiceName"

          - task: UsePythonVersion@0
            displayName: Set Python version to 3.7
            inputs:
              versionSpec: '3.7'
              architecture: 'x64'

          - script: |
              pip3 install pipenv
              pipenv install
            displayName: 'pipenv install'

          - task: AzureCLI@2
            displayName: 'Configure indexes'
            inputs:
              azureSubscription: $(subscription)
              scriptType: bash
              scriptPath: 'deploy/deploy-indexes.sh'
              addSpnToEnvironment: true
            env:
              resourceGroup: $(resourceGroupNamePrefix)-$(environment)
              datalakeAccountName: wbdatalake$(environment)
              datalakeResourceGroup: wb-datalake-$(environment)
